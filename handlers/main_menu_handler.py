from aiogram import Router
from aiogram.dispatcher.filters.text import Text
from aiogram.types import Message

import bot
import keyboards as kbs
import data.parsing_data as ps
import parsing.parser

router = Router()  # 1

@router.message(commands=['start'])
async def get_started(message: Message):
    await message.answer(
        "–í—ã–±–µ—Ä–µ—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é\n"
        "–î–ª—è –ø–æ–º–æ—â–∏ –Ω–∞–ø–∏—à–∏—Ç–µ /help",
        reply_markup=kbs.main_menu.get_main_menu()
    )

@router.message(commands=['help'])
async def get_help(message: Message):
    await message.answer(
        "–û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞:\n"
        "1) –ü—Ä–æ—Å–º–æ—Ç—Ä –Ω–æ–≤–æ—Å—Ç–µ–π –º–∏—Ä–∞ —ç–∫–æ–Ω–æ–º–∏–∫–∏ –∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤\n"
        "2) –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å —Å–∞–π—Ç–∞ –¶–ë –†–§ —Å —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–º–∏ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º–∏ –∏ —Ç–µ–∫—É—â–∏–º–∏ –∫—É—Ä—Å–∞–º–∏ –≤–∞–ª—é—Ç\n"
        "2) –ü—Ä–æ—Å–º–æ—Ç—Ä –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∫–æ—Ç–∏—Ä–æ–≤–æ–∫ –∞–∫—Ü–∏–π –°–ü–ë –∏ –ú–æ—Å–∫–æ–≤—Å–∫–æ–π –ë–∏—Ä–∂, —Å—ã—Ä—å—è –∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã\n"
        "3) –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–∫—Ü–∏—è—Ö –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∫–æ—Ç–∏—Ä–æ–≤–æ–∫\n"
        "4) –ò–Ω–≤–µ—Å—Ç-–∏–¥–µ–∏ –æ—Ç –∞–≤—Ç–æ—Ä–∞ (–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–µ—Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –∏ —Ä–µ–¥–∫–∏–µ)\n"
        "5) –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ –≤ 7.00 –ø–æ –ú–æ—Å–∫–≤–µ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å\n"
        "–î–ª—è –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö —Ä–∞–±–æ—Ç—ã —Å –∞–∫—Ü–∏—è–º–∏ –ø–∏—à–∏—Ç–µ '/help_stock'\n"
        "–î–ª—è –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —à–∞–±–ª–æ–Ω–∞—Ö '/help_pattern'"
    )


@router.message(commands=['help_stock'])
async def get_help_stock(message: Message):
    await message.answer(
        "üî∑–ö–æ–º–∞–Ω–¥—ã '/msk_find' –∏ '/spb_find' –∏—â—É—Ç —Å—Ä–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–π –∫–æ–º–ø–∞–Ω–∏–π –∏ —Ç–∏–∫–µ—Ä–æ–≤ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç"
        "–æ–±—Ä–∞—Ç–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –ø–æ –ø–∞—Ç—Ç–µ—Ä–Ω—É –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é. –ó–∞ —Ä–∞–∑ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –¥–ª–∏–Ω–Ω–µ–µ 50 –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–π\n"
    )
    await message.answer(
        "üî∑–ö–æ–º–∞–Ω–¥—ã '/msk_add' –∏ '/spb_add' –¥–æ–±–∞–≤–ª—è—é—Ç –≤ —Å–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –Ω–∞–ø–∏—Å–∞–Ω–Ω—É—é –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã –∞–∫—Ü–∏—é –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏ –ø–æ–ª–Ω–æ–≥–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è"
        "–∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏—è –∏–ª–∏ —Ç–∏–∫–µ—Ä–∞ (—Ä–µ–≥–∏—Å—Ç—Ä –Ω–∞ –≤–∞–∂–µ–Ω). –í –∏–Ω–æ–º —Å–ª—É—á–∞–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥—Ö–æ–¥—è–∑–∏–º–∏ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è–º–∏,"
        "–ª–∏–º–∏—Ç —Ç–∞–∫–∂–µ 50 –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–π. –ù–∞–ø—Ä–∏–º–µ—Ä, '/msk_add yndx' –¥–æ–±–∞–≤–∏—Ç –∞–∫—Ü–∏—é –Ø–Ω–¥–µ–∫—Å –≤ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ, –∞ –∫–æ–º–∞–Ω–¥–∞ '/msk_add –±–∞–Ω–∫'"
        "–≤–µ—Ä–Ω–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–æ –≤—Å–µ–º–∏ –∞–∫—Ü–∏—è–º–∏, –≥–¥–µ –≤ –∏–º–µ–Ω–∏ –µ—Å—Ç—å –ø–æ–¥—Å—Ç—Ä–æ–∫–∞ '–±–∞–Ω–∫'"
    )
    await message.answer(
        "üî∑–ö–æ–º–∞–Ω–¥—ã '/msk_del' –∏ '/spb_del' —É–¥–∞–ª–∏—Ç –∞–∫—Ü–∏—é –∏–∑ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –ø—Ä–∏ –ø–æ–ª–Ω–æ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–∏ —Ç–∏–∫–µ—Ä–∞ –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏—è (—Ä–µ–≥–∏—Å—Ç—Ä –Ω–µ –≤–∞–∂–µ–Ω)."
        "–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–µ—Ä–µ–¥ –≤—ã–∑–æ–≤–æ–º —ç—Ç–æ–π —Ñ—É–∫–Ω—Ü–∏–∏ –≤—ã–∑—ã–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É '–û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ –∞–∫—Ü–∏–∏ ...' –∏–∑ –º–µ–Ω—é –∞–∫—Ü–∏–π"
    )

@router.message(commands=['help_pattern'])
async def get_help_pattern(message: Message):
    await message.answer(
        "–ü—Ä–∏–º–µ—Ä—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤:\n"
        "1) –î–æ–±–∞–≤–∏—Ç—å –ø–∞—Ç—Ç–µ—Ä–Ω —Å —Ç–µ–∫—É—â–µ–π —Ü–µ–Ω–æ–π –∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º —Ü–µ–Ω—ã –∑–∞ –¥–µ–Ω—å '/msk_ch 11 0 1'\n"""
        "2) –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ä—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º 1 –Ω–∞ –Ω–æ–≤—ã–π —Å –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–º —Ç–æ–ª—å–∫–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞ –≥–æ–¥ '/msk_ch 1 6'\n"
        "3) –°–¥–µ–ª–∞—Ç—å –Ω—ã–Ω–µ—à–Ω–∏–π –ø–∞—Ç—Ç–µ—Ä–Ω –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º 1 –ø–∞—Ç—Ç–µ—Ä–Ω–æ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é '/msk_ch 10 1'",
        reply_markup=kbs.main_menu.get_change_notifications_menu()
    )


@router.message(Text(text="–ö—É—Ä—Å $ –∏ ‚Ç¨"))
async def answer_bax_euro(message: Message):
    if ps.updating:
        await message.answer(
            "–ò–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ ~10 —Å–µ–∫—É–Ω–¥",
            reply_markup=kbs.main_menu.get_main_menu()
        )
        return
    if 'üÜò' in ps.bax_rates_info[0]:
        ps.bax_rates_info.clear()
        ps.euro_rates_info.clear()
        await parsing.parser.update_cbr()
    mes =  "–í—á–µ—Ä–∞:          1üíµ = " + ps.bax_rates_info[0] + "       1üí∂ = " + ps.euro_rates_info[0] + "\n"
    mes += "–ü–æ–∑–∞–≤—á–µ—Ä–∞: 1üíµ = " + ps.bax_rates_info[1] + "       1üí∂ = " + ps.euro_rates_info[1]
    await message.answer(
        mes,
        reply_markup=kbs.main_menu.get_main_menu()
    )


@router.message(Text(text="–ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –¶–ë –†–§"))
async def answer_values(message: Message):
    if ps.updating:
        await message.answer(
            "–ò–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ ~10 —Å–µ–∫—É–Ω–¥",
            reply_markup=kbs.main_menu.get_main_menu()
        )
        return
    if 'üÜò' in ps.indexes_info[0]:
        await parsing.parser.update_cbr()
    mes = ""
    for row in ps.indexes_info:
        if "üÜò" in row:
            mes += row + "\n"
        else:
            parts = row.split(": ")
            mes += ": üî∏".join(parts) + "üî∏\n"
    await message.answer(
        mes,
        reply_markup=kbs.main_menu.get_main_menu()
    )


@router.message(Text(text="–ö—Ä–∏–ø—Ç–∞"))
async def answer_crypto(message: Message):
    if ps.updating:
        await message.answer(
            "–ò–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ ~10 —Å–µ–∫—É–Ω–¥",
            reply_markup=kbs.main_menu.get_main_menu()
        )
        return
    mes = ""
    for name, info in ps.crypto_info.items():
        if (info[0] == '0.0'):
            continue
        mes += f"{name}: {info[0]}üíµ, –¥–µ–ª—å—Ç–∞ -  "
        if (info[1][0] == '-'):
            mes += f"üî¥ {info[1]} üî¥\n"
        else:
            mes += f"üü¢ {info[1]} üü¢\n"
    await message.answer(
        mes,
        reply_markup=kbs.main_menu.get_main_menu()
    )

@router.message(Text(text="–°—ã—Ä—å–µ"))
async def answer_goods(message: Message):
    if ps.updating:
        await message.answer(
            "–ò–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ ~10 —Å–µ–∫—É–Ω–¥",
            reply_markup=kbs.main_menu.get_main_menu()
        )
        return
    mes = ""
    for name, info in ps.goods_info.items():
        if (info[0] == '0.0'):
            continue
        mes += f"{name}: {info[0]}üíµ, –¥–µ–ª—å—Ç–∞ -  "
        if (info[1][0] == '-'):
            mes += f"üî¥ {info[1]} üî¥\n"
        else:
            mes += f"üü¢ {info[1]} üü¢\n"
    await message.answer(
        mes,
        reply_markup=kbs.main_menu.get_main_menu()
    )

@router.message(Text(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"))
async def answer_return_menu_from_news(message: Message):
    await message.answer(
        "Yes, sir",
        reply_markup=kbs.main_menu.get_main_menu()
    )

